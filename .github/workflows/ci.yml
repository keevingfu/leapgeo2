name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # ==========================================
  # Frontend Build & Test
  # ==========================================
  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 🔍 Install dependencies
        run: npm ci

      - name: 🔎 Type check
        run: npm run type-check

      - name: 🏗️ Build production
        run: npm run build

      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
          retention-days: 7

  # ==========================================
  # Backend Validation
  # ==========================================
  backend:
    name: Backend Validation
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: 🔍 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🔎 Check Python syntax
        run: |
          python -m py_compile app/*.py
          python -m py_compile app/*/*.py

  # ==========================================
  # Security & Code Quality
  # ==========================================
  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 📊 Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # ==========================================
  # Notification on Success
  # ==========================================
  notify:
    name: Build Status Notification
    runs-on: ubuntu-latest
    needs: [frontend, backend, security]
    if: always()

    steps:
      - name: ✅ Build Success
        if: ${{ needs.frontend.result == 'success' && needs.backend.result == 'success' }}
        run: |
          echo "🎉 All checks passed!"
          echo "✅ Frontend build: SUCCESS"
          echo "✅ Backend validation: SUCCESS"
          echo "✅ Security scan: SUCCESS"

      - name: ❌ Build Failed
        if: ${{ needs.frontend.result == 'failure' || needs.backend.result == 'failure' }}
        run: |
          echo "❌ Build failed!"
          echo "Frontend: ${{ needs.frontend.result }}"
          echo "Backend: ${{ needs.backend.result }}"
          exit 1
